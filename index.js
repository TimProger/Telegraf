require('dotenv').config();
const { Telegraf, Scenes, Markup, session } = require('telegraf');
const sendScene = require("./scenes/send")
const gameScene = require("./scenes/game")
const bot = new Telegraf(process.env.BOT_TOKEN)

const command_about = "–ú–æ–π –Ω–∏–∫ üî•TimProgüî• –∏ –º–æ–µ–π —Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç—å <b>full stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º</b>.\n–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑–Ω–∞–Ω–∏–π, –æ–¥–Ω–∞–∫–æ —è –ø–ª–∞–Ω–∏—Ä—É—é —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏–¥–µ—é –±–æ—Ç–∞ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ –≤ –±—É–¥—É—â–µ–º –æ–Ω —Å—Ç–∞–Ω–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º. \n <i>–ö –∫–æ–Ω—Ü—É –≥–æ–¥–∞ –≤—ã–ø—É—â—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –µ—â—ë –±–æ–ª–µ–µ –∂–∏–≤—ã–º.</i>"
const command_list = `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: \n\n 1. <i><b>üåù TimProg üåö</b></i>\n\n 2. <i><b>üèÜ –ú–æ–∏ —Ä–∞–±–æ—Ç—ã üèÜ</b></i> \n\n 3. <i><b>üé≤ –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" üé≤</b></i> \n\n 4. <i><b>‚úâÔ∏è –ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚úâÔ∏è</b></i>`

const stage = new Scenes.Stage([sendScene, gameScene])
bot.use(session())
bot.use(stage.middleware())
bot.hears('–ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É', ctx => ctx.scene.enter('timWizard'))
bot.hears('–ú–æ–∏ —Ä–∞–±–æ—Ç—ã', async (ctx) => {
    await ctx.reply(`–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º —è —Ä–∞–±–æ—Ç–∞–ª.`)
    await ctx.replyWithHTML(`–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã: \n\n ‚≠êÔ∏è <i><b>Comics.hub</b></i> ‚≠êÔ∏è\n\n ‚≠êÔ∏è <i><b>Telegraf</b></i> ‚≠êÔ∏è
        `, Markup.inlineKeyboard([
            [Markup.button.callback('Comics.hub', 'comicshub')],[Markup.button.callback('Telegraf', 'telegraf')]
        ]), Markup.keyboard([
            ['Comics.hub', 'Telegraf']
        ])
    )
})
bot.hears('–ò–≥—Ä–∞', ctx => ctx.scene.enter('botWizard'))
bot.hears('–°–ø–∏—Å–æ–∫', (ctx) => {
    ctx.replyWithHTML(command_list)
})
bot.hears('TimProg', (ctx) => {
    ctx.replyWithHTML(command_about)
})
bot.hears('–ü—Ä–∏–≤–µ—Ç', (ctx) => {
    ctx.reply('–ù—É –∑–¥—Ä–∞—Å—Ç–≤—É–π')
})

bot.start(async (ctx) => {
    try {
        await ctx.replyWithHTML(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üî•TimProgüî• –∏ —è —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å <i><b>–±–æ—Ç–∞</b></i> –¥–ª—è Telegram –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –æ–±–æ –º–Ω–µ. \n
–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ñ—Ä–∞–∑—É "–°–ø–∏—Å–æ–∫".`, Markup.inlineKeyboard([
            [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ üìã', 'commandList')]
        ]), Markup.keyboard([
            ['TimProg', '–ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'],
            ['–ú–æ–∏ —Ä–∞–±–æ—Ç—ã', '–ò–≥—Ä–∞'],
        ]).oneTime().resize())
    } catch (e) {
        console.log(e)
    }
})
bot.action('commandList', (ctx) => {
      ctx.replyWithHTML(command_list, Markup.keyboard([
        ['1', '2', '3', '4']
    ]).oneTime().resize());
});
bot.hears('1', (ctx) => {
    ctx.replyWithHTML(command_about)
})
bot.hears('2', async (ctx) => {
    await ctx.reply(`–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º —è —Ä–∞–±–æ—Ç–∞–ª.`)
    await ctx.replyWithHTML(`–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã: \n\n ‚≠êÔ∏è <i><b>Comics.hub</b></i> ‚≠êÔ∏è\n\n ‚≠êÔ∏è <i><b>Telegraf</b></i> ‚≠êÔ∏è
        `, Markup.inlineKeyboard([
            [Markup.button.callback('Comics.hub', 'comicshub')],[Markup.button.callback('Telegraf', 'telegraf')]
        ]), Markup.keyboard([
            ['Comics.hub', 'Telegraf']
        ])
    )
})
const firstWork = `–ü—Ä–æ–µ–∫—Ç –Ω–µ –±—ã–ª –∑–∞–∫–æ–Ω—á–µ–Ω –¥–æ –∫–æ–Ω—Ü–∞, –æ–¥–Ω–∞–∫–æ –Ω–∞–¥ –Ω–∏–º —è –Ω–µ –º–∞–ª–æ –ø–æ–ø—ã—Ö—Ç–µ–ª. –≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ. \n\nü§ñ https://github.com/TimProger/Comics.hub ü§ñ`
const secondWork = `–î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª –∑–∞–∫–æ–Ω—á–µ–Ω –∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–±–ª—é–¥–∞—Ç—å –µ–≥–æ –ø–µ—Ä–µ–¥ —Å–≤–æ–∏–º–∏ –≥–ª–∞–∑–∞–º–∏. –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –¥–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ \n\nü§ñ https://github.com/TimProger/Telegraf ü§ñ`
bot.hears('3', ctx => ctx.scene.enter('botWizard'))
bot.hears('4', ctx => ctx.scene.enter('timWizard'))
bot.hears('Comics.hub', (ctx) => {
    ctx.replyWithHTML(firstWork);
})
bot.hears('Telegraf', (ctx) => {
    ctx.replyWithHTML(secondWork)
})
bot.action('comicshub', (ctx) => {
    ctx.replyWithHTML(firstWork);
});
bot.action('telegraf', (ctx) => {
    ctx.replyWithHTML(secondWork)
})
let counter = 0
bot.on('sticker', (ctx) => {
    if(counter % 2 == 0){
        ctx.reply('ü§©')
        counter++
    }else{
        ctx.reply('üòé')
        if(counter>2){
            counter = 0
        }
    }
})

bot.launch()