// –ü—Ä–∏–≤—è–∑—ã–≤–∞—é –±–æ—Ç–∞ –∫ –∫–æ–¥—É –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–æ–≤ –ø–∞–ø–∫–∏ ./scenes/
require("dotenv").config();
const { Telegraf, Scenes, Markup, session } = require("telegraf");
const error = "–û—à–∏–±–∫–∞, —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
const sendScene = require("./scenes/send");
const gameScene = require("./scenes/game");
const bot = new Telegraf(process.env.BOT_TOKEN);

// –°–æ–∑–¥–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –±–æ—Ç–æ–º
const command_about =
  "–ú–æ–π –Ω–∏–∫ üî•TimProgüî• –∏ –º–æ–µ–π —Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç—å <b>full stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º</b>.\n–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –∑–Ω–∞–Ω–∏–π, –æ–¥–Ω–∞–∫–æ —è –ø–ª–∞–Ω–∏—Ä—É—é —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏–¥–µ—é –±–æ—Ç–∞ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ –≤ –±—É–¥—É—â–µ–º –æ–Ω —Å—Ç–∞–Ω–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º. \n <i>–ö –∫–æ–Ω—Ü—É –≥–æ–¥–∞ –≤—ã–ø—É—â—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –µ—â—ë –±–æ–ª–µ–µ –∂–∏–≤—ã–º.</i>";
const command_list = `–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: \n\n 1. <i><b>üåù TimProg üåö</b></i>\n\n 2. <i><b>üèÜ –ú–æ–∏ —Ä–∞–±–æ—Ç—ã üèÜ</b></i> \n\n 3. <i><b>üé≤ –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" üé≤</b></i> \n\n 4. <i><b>‚úâÔ∏è –ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É ‚úâÔ∏è</b></i>`;

// –ü–∏—à—É –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –∏ –¥–æ–±–∞–≤–ª—è—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
const stage = new Scenes.Stage([sendScene, gameScene]);
bot.use(session());
bot.use(stage.middleware());

// –ù–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–∞—è –∏–¥–µ—è —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º –≤ –¥—Ä—É–≥—É—é –±–µ—Å–µ–¥—É
bot.hears("–ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É", (ctx) => ctx.scene.enter("timWizard"));

// –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –ø–æ–∫–∞–∑ –º–æ–∏—Ö —Ä–∞–±–æ—Ç –±–æ—Ç–æ–º
bot.hears("–ú–æ–∏ —Ä–∞–±–æ—Ç—ã", async (ctx) => {
  await ctx.reply(
    `–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º —è —Ä–∞–±–æ—Ç–∞–ª.`
  );
  await ctx.replyWithHTML(
    `–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã: \n\n ‚≠êÔ∏è <i><b>Comics.hub</b></i> ‚≠êÔ∏è\n\n ‚≠êÔ∏è <i><b>Telegraf</b></i> ‚≠êÔ∏è \n\n ‚≠êÔ∏è <i><b>NoteWrite</b></i> ‚≠êÔ∏è \n\n ‚≠êÔ∏è <i><b>TailwindVK</b></i> ‚≠êÔ∏è

        `,
    Markup.inlineKeyboard([
      [Markup.button.callback("Comics.hub", "comicshub")],
      [Markup.button.callback("Telegraf", "telegraf")],
      [Markup.button.callback("NoteWrite", "notewrite")],
      [Markup.button.callback("TailwindVK", "tailwindvk")],
    ]),
    Markup.keyboard([["Comics.hub", "Telegraf", "NoteWrite", "TailwindVK"]])
  );
});

// –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞—é—â–∞—è –∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
bot.hears("–ò–≥—Ä–∞", (ctx) => ctx.scene.enter("botWizard"));

// –ö–æ–º–∞–Ω–¥–∞ –≤—ã–¥–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
bot.hears("–°–ø–∏—Å–æ–∫", (ctx) => {
  ctx.replyWithHTML(command_list);
});

// –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ç–µ–∫—Å—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–π –≤—ã—à–µ
bot.hears("TimProg", (ctx) => {
  ctx.replyWithHTML(command_about);
});

// –ö—É
bot.hears("–ü—Ä–∏–≤–µ—Ç", (ctx) => {
  ctx.reply("–ù—É –∑–¥—Ä–∞—Å—Ç–≤—É–π");
});

// –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ—á—å, –ø–æ—è–≤–ª—è—é—â–∞—è—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –∏–ª–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –∫–Ω–æ–ø–∫—É –≤—ã–≤–æ–¥—è—â—É—é —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
bot.start(async (ctx) => {
  try {
    await ctx.replyWithHTML(
      `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üî•TimProgüî• –∏ —è —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å <i><b>–±–æ—Ç–∞</b></i> –¥–ª—è Telegram –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –æ–±–æ –º–Ω–µ. \n
–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ñ—Ä–∞–∑—É "–°–ø–∏—Å–æ–∫".`,
      Markup.inlineKeyboard([
        [Markup.button.callback("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ üìã", "commandList")],
      ]),
      Markup.keyboard([
        ["TimProg", "–ü–∏—Å—å–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"],
        ["–ú–æ–∏ —Ä–∞–±–æ—Ç—ã", "–ò–≥—Ä–∞"],
      ])
        .oneTime()
        .resize()
    );
  } catch (e) {
    console.log(e);
    ctx.replyWithHTML(error);
  }
});

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞
bot.action("commandList", (ctx) => {
  ctx.replyWithHTML(
    command_list,
    Markup.keyboard([["1", "2", "3", "4"]])
      .oneTime()
      .resize()
  );
});

// –û—Ç–≤–µ—Ç –Ω–∞ —Ü–∏—Ñ—Ä—É 1
bot.hears("1", (ctx) => {
  ctx.replyWithHTML(command_about);
});

// –û—Ç–≤–µ—Ç –Ω–∞ —Ü–∏—Ñ—Ä—É 2
bot.hears("2", async (ctx) => {
  await ctx.reply(
    `–£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º —è —Ä–∞–±–æ—Ç–∞–ª.`
  );
  await ctx.replyWithHTML(
    `–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã: \n\n ‚≠êÔ∏è <i><b>Comics.hub</b></i> ‚≠êÔ∏è\n\n ‚≠êÔ∏è <i><b>Telegraf</b></i> ‚≠êÔ∏è \n\n ‚≠êÔ∏è <i><b>NoteWrite</b></i> ‚≠êÔ∏è \n\n ‚≠êÔ∏è <i><b>TailwindVK</b></i> ‚≠êÔ∏è

        `,
    Markup.inlineKeyboard([
      [Markup.button.callback("Comics.hub", "comicshub")],
      [Markup.button.callback("Telegraf", "telegraf")],
      [Markup.button.callback("NoteWrite", "notewrite")],
      [Markup.button.callback("TailwindVK", "tailwindvk")],
    ]),
    Markup.keyboard([["Comics.hub", "Telegraf", "NoteWrite", "TailwindVK"]])
  );
});

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ —Ç–µ–∫—Å—Ç –≤ "–ú–æ–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö"
const firstWork = `–ü—Ä–æ–µ–∫—Ç –Ω–µ –±—ã–ª –∑–∞–∫–æ–Ω—á–µ–Ω –¥–æ –∫–æ–Ω—Ü–∞, –æ–¥–Ω–∞–∫–æ –Ω–∞–¥ –Ω–∏–º —è –Ω–µ –º–∞–ª–æ –ø–æ–ø—ã—Ö—Ç–µ–ª. –≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ. \n\nü§ñ https://github.com/TimProger/Comics.hub ü§ñ`;
const secondWork = `–î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª –∑–∞–∫–æ–Ω—á–µ–Ω –∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–±–ª—é–¥–∞—Ç—å –µ–≥–æ –ø–µ—Ä–µ–¥ —Å–≤–æ–∏–º–∏ –≥–ª–∞–∑–∞–º–∏. –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –¥–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ \n\nü§ñ https://github.com/TimProger/Telegraf ü§ñ`;
const thirdWork = `–ü–æ—á—Ç–∏ –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –∑–∞–º–µ—Ç–æ–∫, —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏—Ö—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±—Ä–∞—É–∑–µ—Ä–∞. \n\n–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–æ–∂–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://notewrite.herokuapp.com/ \n\n–ê –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∫–æ–¥–æ–º –º–æ–∂–Ω–æ —Ç—É—Ç: \nü§ñ https://github.com/TimProger/notewrite ü§ñ`;
const forthWork = `–ù–∞ –¥–Ω—è—Ö –ø–æ—Å–º–æ—Ç—Ä–µ–ª –∫—É—Ä—Å –ø–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É Tailwind CSS –∏ —Ä–µ—à–∏–ª –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –°–ø—É—Å—Ç—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —è –Ω–∞–∫–æ–Ω–µ—Ü –∑–∞–∫–æ–Ω—á–∏–ª –¥–µ–ª–∞—Ç—å —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. \n\n–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–æ–∂–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://timproger.github.io/Tailwind_VK/# \n\n–ê –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∫–æ–¥–æ–º –º–æ–∂–Ω–æ —Ç—É—Ç: \nü§ñ https://github.com/TimProger/Tailwind_VK ü§ñ`;

// –û—Ç–≤–µ—Ç –Ω–∞ —Ü–∏—Ñ—Ä—É 3
bot.hears("3", (ctx) => ctx.scene.enter("botWizard"));

// –û—Ç–≤–µ—Ç –Ω–∞ —Ü–∏—Ñ—Ä—É 4
bot.hears("4", (ctx) => ctx.scene.enter("timWizard"));

// –ö–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –æ—Ç–≤–µ—Ç –≤ "–ú–æ–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö"

bot.on('poll', (ctx) => console.log('Poll update', ctx.poll))

bot.command('poll', (ctx) =>
  ctx.replyWithPoll(
    'Your favorite math constant',
    ['x', 'e', 'œÄ', 'œÜ', 'Œ≥'],
    { is_anonymous: false }
  )
)

bot.hears("Comics.hub", (ctx) => {
  ctx.replyWithHTML(firstWork, {
    disable_web_page_preview: true,
  });
});
bot.action("comicshub", (ctx) => {
  ctx.replyWithHTML(firstWork, {
    disable_web_page_preview: true,
  });
});

bot.hears("Telegraf", (ctx) => {
  ctx.replyWithHTML(secondWork, {
    disable_web_page_preview: true,
  });
});
bot.action("telegraf", (ctx) => {
  ctx.replyWithHTML(secondWork, {
    disable_web_page_preview: true,
  });
});

bot.action("NoteWrite", (ctx) => {
  ctx.replyWithHTML(thirdWork, {
    disable_web_page_preview: true,
  });
});
bot.action("notewrite", (ctx) => {
  ctx.replyWithHTML(thirdWork, {
    disable_web_page_preview: true,
  });
});
bot.action("TailwindVK", (ctx) => {
  ctx.replyWithHTML(forthWork, {
    disable_web_page_preview: true,
  });
});
bot.action("tailwindvk", (ctx) => {
  ctx.replyWithHTML(forthWork, {
    disable_web_page_preview: true,
  });
});

// –ß–µ—Ä–µ–¥—É—é—â–∏–µ—Å—è —Å—Ç–∏–∫–µ—Ä—ã –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∏–∫–µ—Ä
let counter = 0;
bot.on("sticker", (ctx) => {
  if (counter < 1) {
    ctx.reply("ü§©");
    counter++;
  } else {
    ctx.reply("üòé");
    counter--;
    if (counter > 1) {
      counter = 0;
    }
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
