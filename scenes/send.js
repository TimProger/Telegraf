const { Markup, Composer, Scenes } = require("telegraf");

const startStep = new Composer();
startStep.on("text", async (ctx) => {
  try {
    ctx.wizard.state.data = {};
    await ctx.replyWithHTML(
      `–†–µ—à–∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –ø–∏—Å—å–º–æ? –ß—Ç–æ –∂, —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –µ–≥–æ –ø—Ä–∏–º—É!`
    );
    await ctx.replyWithHTML(
      "–í–≤–µ–¥–∏—Ç–µ <b>—Ç–µ–∫—Å—Ç</b>, –∫–æ—Ç–æ—Ä—ã–π –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å! ‚úèÔ∏è"
    );
    return ctx.wizard.next();
  } catch (e) {
    console.log(e);
  }
});

const lastStep = new Composer();
lastStep.on("text", async (ctx) => {
  try {
    ctx.wizard.state.data.text = ctx.message.text;
    const message = `–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n${ctx.wizard.state.data.text}`;
    ctx.replyWithHTML(`${message} \n\n <i>–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! üì¨</i>`);
    const username = `${ctx.message.from.first_name} ${ctx.message.from.last_name}`;
    ctx.telegram.sendMessage(
      (ctx.message.chat.id = process.env.chatid),
      `New message from ${username}! My lord, look what we've got: \n\n ${message}`
    );
    return ctx.scene.leave();
  } catch (e) {
    console.log(e);
  }
});

const sendScene = new Scenes.WizardScene("timWizard", startStep, lastStep);
module.exports = sendScene;
